import SwiftUI

struct ContentView: View {
    @State private var contentSize: CGSize =.zero
    @State private var scrollOffset: CGFloat = 0

    var body: some View {
        ScrollView {
            VStack {
                ForEach(0..<30) { index in
                    Text("Item \(index)")
                     .font(.title)
                     .frame(width: UIScreen.main.bounds.width - 40, height: 80)
                     .background(Color.gray.opacity(0.2))
                     .padding()
                }
            }
         .background {
                GeometryReader { geometry in
                    Color.clear
                     .preference(key: ContentSizeKey.self, value: geometry.size)
                }
            }
        }
     .overlay(
            GeometryReader { proxyGeometry in
                Color.clear
                 .preference(key: ScrollOffsetKey.self, value: proxyGeometry.frame(in:.named("scrollView")).minY)
            }
         .coordinateSpace(name: "scrollView")
        )
     .onPreferenceChange(ContentSizeKey.self) { size in
            contentSize = size
            print("ContentView尺寸: \(contentSize)")
        }
     .onPreferenceChange(ScrollOffsetKey.self) { offset in
            scrollOffset = offset
            print("滚动偏移量: \(scrollOffset)")
        }
    }
}

// 用于获取contentView尺寸的PreferenceKey
struct ContentSizeKey: PreferenceKey {
    static var defaultValue: CGSize =.zero
    static func reduce(value: inout CGSize, nextValue: () -> CGSize) {
        value = nextValue()
    }
}

// 用于获取滚动偏移量的PreferenceKey
struct ScrollOffsetKey: PreferenceKey {
    static var defaultValue: CGFloat = 0
    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value = nextValue()
    }
}
