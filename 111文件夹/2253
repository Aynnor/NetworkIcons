import SwiftUI

struct ContentView: View {
    @State private var isAtBottom: Bool = false

    var body: some View {
        VStack {
            ScrollView {
                ScrollViewReader { proxy in
                    LazyVStack {
                        ForEach(0..<100) { index in
                            Text("Item \(index)")
                                .padding()
                                .id(index) // 为每个子视图设置唯一ID
                        }
                    }
                    .background(GeometryReader { geometry in
                        Color.clear
                            .preference(key: ScrollOffsetPreferenceKey.self, value: geometry.frame(in: .named("scrollView")).minY)
                    })
                    .onPreferenceChange(ScrollOffsetPreferenceKey.self) { offset in
                        // 判断是否滚动到底部
                        DispatchQueue.main.async {
                            withAnimation {
                                isAtBottom = offset <= -geometry.size.height + proxy.frame(in: .global).height
                            }
                        }
                    }
                }
            }
            .coordinateSpace(name: "scrollView") // 为ScrollView设置坐标系

            if isAtBottom {
                Text("已经滚动到底部")
                    .padding()
                    .background(Color.green)
                    .cornerRadius(8)
            } else {
                Text("尚未滚动到底部")
                    .padding()
                    .background(Color.red)
                    .cornerRadius(8)
            }
        }
    }
}

// 自定义PreferenceKey用于获取滚动偏移量
struct ScrollOffsetPreferenceKey: PreferenceKey {
    static var defaultValue: CGFloat = 0

    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value = nextValue()
    }
}
